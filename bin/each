#!/bin/sh
#
# NAME
#       each - loop over file paths
#
# SYNOPSIS
#       each [-n] <SCRIPT> <FILE_PATH>...
#
# DESCRIPTION
#       Sets the following variables and evaluates the
#       given <SCRIPT> once for each given <FILE_PATH>.
#
#       $p = the given <FILE_PATH>
#       $f = the given <FILE_PATH> without directories (basename)
#       $n = the given <FILE_PATH> without directories and file extension
#       $d = the given <FILE_PATH> with only directories (dirname)
#       $x = the given <FILE_PATH> with only file extension
#       $X = the given <FILE_PATH> without file extension
#
#       These variable names come from Ruby's String#pathmap() method.
#
# OPTIONS
#       -n  Dry run.  Instead of evaluating the <SCRIPT>,
#           print what would happen if it were evaluated.
#
# AUTHOR
#       Written by Suraj N. Kurapati in 2011 based on
#       on his old "for each file" project from 2003:
#       https://github.com/sunaku/ff-bash
#

if test "$1" = '-n'; then
  DRYRUN=$1
  shift
fi

if test $# -lt 2; then
  sed -n '2,/^$/s/^# \?//p' "$0"
  exit 1
fi

SCRIPT=$1
shift

if test -n "$DRYRUN"; then
SCRIPT="cat <<END_SCRIPT_DRYRUN
$SCRIPT
END_SCRIPT_DRYRUN"
fi

for p; do
  f=${p##*/}
  n=${f%.*}
  d=${p%/*}
  x=${f##*.}
  X=${p%.*}
  eval "$SCRIPT"
done
