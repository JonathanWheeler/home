#!/bin/sh -e
#
# Uses external display if connected; or internal display otherwise.
#
# Written in 2014 by Suraj N. Kurapati <https://github.com/sunaku>

# detect and register active displays as variables in this script
eval $(xrandr --verbose | awk '
  $2 ~ /connected/ {
    device=$1
    gsub("-", "", $1)
    display=$1
    print display "=" device
    print display "_connected=" ($2 == "connected")
  }
  $1 ~ /^[[:digit:]]+x[[:digit:]]+/ {
    if ($NF == "*current") {
      print display "_active=1"
      print display "_size=" $1
    }
    if ($NF == "+preferred") {
      print display "_preferred_size=" $1
    }
    # override preferred_size with max resolution
    if (!max_resolution[display]) {
      max_resolution[display] = $1
      print display "_preferred_size=" $1
    }
  }
')

if test "$DP22_connected" = 1; then
  # switch off internal display and use external one
  set -- "$@" --output "$eDP1" --off \
              --output "$DP22" --auto

  test "$DP22_preferred_size" != "$DP22_size" &&
    set -- "$@" ';' xrandr --size "$DP22_preferred_size"

elif test "$HDMI1_connected" = 1; then
  # switch off internal display and use external one
  set -- "$@" --output "$eDP1" --off \
              --output "$HDMI1" --auto

  test "$HDMI1_preferred_size" != "$HDMI1_size" &&
    set -- "$@" ';' xrandr --size "$HDMI1_preferred_size"

else
  # no external displays connected; use internal one
  set -- "$@" --auto

  test "$eDP1_preferred_size" != "$eDP1_size" &&
    set -- "$@" ';' xrandr --size "$eDP1_preferred_size"

  # reduce brightness of internal display
  xbacklight | grep -q '^100' && xbacklight = 15
fi

test $# -gt 0 && eval xrandr "$@" ||:
