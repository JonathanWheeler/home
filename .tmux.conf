bind R source ~/.tmux.conf \; display 'config reloaded!'

#-----------------------------------------------------------------------------
# terminal
#-----------------------------------------------------------------------------

# auto-set terminal title to current window pane's title
set -g set-titles on

# enable 256-color support for pretty colorschemes in Vim
set -g default-terminal 'screen-256color'

# allow Vim to recieve modifier keys: Shift, Control, Alt
set -g xterm-keys on

# prevent tmux from catching modifier keys meant for Vim
set -s escape-time 1

# allow set-titles to change the window title under XTerm
# http://opennomad.com/content/goodbye-screen-hello-tmux
# prevent standout from appearing as italics under URxvt
# http://comments.gmane.org/gmane.comp.terminal-emulators.tmux.user/1927
set -g terminal-overrides 'xterm*:XT,rxvt-unicode*:sitm@'

#-----------------------------------------------------------------------------
# appearance
#-----------------------------------------------------------------------------

# put status bar at top of terminal window
set -g status-position top

# Colors from the Zukitwo-Dark GTK+ theme:
# http://lassekongo83.deviantart.com/art/Zukitwo-203936861
set -g window-status-current-fg '#2c2c2c'
set -g window-status-current-bg '#c9c9c9'
set -g pane-active-border-fg blue
set -g pane-active-border-bg default
set -g pane-border-fg '#4c4c4c'
set -g pane-border-bg default
set -g status-fg '#e6e6e6'
set -g status-bg '#3c3c3c'

# Common UI interaction cues from Blueprint CSS:
# http://blueprintcss.org/tests/parts/forms.html
set -g mode-fg '#514721' # notice (yellow)
set -g mode-bg '#ffd324' # notice (yellow)
set -g message-fg '#514721' # notice (yellow)
set -g message-bg '#ffd324' # notice (yellow)
set -g window-status-bell-fg '#d5edf8' # info (blue)
set -g window-status-bell-bg '#205791' # info (blue)
set -g window-status-content-fg '#e6efc2' # success (green)
set -g window-status-content-bg '#264409' # success (green)
set -g window-status-activity-fg '#fbe3e4' # error (red)
set -g window-status-activity-bg '#8a1f11' # error (red)

# Status bar with Powerline symbols and colors
# https://bitbucket.org/sjl/dotfiles/src/tip/tmux/tmux.conf
# http://www.tylercipriani.com/2013/09/12/important-lines-in-my-tmux.html
# https://github.com/Lokaltog/powerline/blob/develop/powerline/bindings/tmux/powerline.conf
set -g status on
set -g status-utf8 on
set -g status-justify right
set -g window-status-separator ''

set -g status-fg colour252
set -g status-bg colour234

set -g status-left-length 102
set -g status-left '#[reverse,bold] #h #[default,bg=colour238] #S:#I.#P #[default,fg=colour238]#[fg=colour117] #F#[default] #T'

set -g status-right-length 26
set -g status-right '#[fg=colour238]#[default,bg=colour238] %d %b %Y #[reverse,bold] %a %R '

set -g window-status-format '  #[bold]#I#F#[nobold]#W  '

set -g window-status-current-fg colour231
set -g window-status-current-bg colour31
set -g window-status-current-format '#[reverse,fg=colour234]#[noreverse,fg=colour117] #I#F#[default,bold]#W #[nobold,fg=colour234]'

#-----------------------------------------------------------------------------
# windows
#-----------------------------------------------------------------------------

# create window
bind -n M-e command-prompt "new-window -n '%%'"
bind -n M-E command-prompt -I '#W' "rename-window '%%'"

# focus window
set -g mouse-select-window on
bind -n M-, previous-window
bind -n M-. next-window
bind -n M-o last-window

# focus by number
set -g base-index 1
setw -g pane-base-index 1
bind -n M-0 choose-window
bind -n M-1 select-window -t :1
bind -n M-2 select-window -t :2
bind -n M-3 select-window -t :3
bind -n M-4 select-window -t :4
bind -n M-5 select-window -t :5
bind -n M-6 select-window -t :6
bind -n M-7 select-window -t :7
bind -n M-8 select-window -t :8
bind -n M-9 select-window -t :9

# swap window
bind -n M-< swap-window -t :-1
bind -n M-> swap-window -t :+1

# monitor window
bind -n M-k setw monitor-activity
bind -n M-q command-prompt -p 'monitor-silence (seconds)' -I 0 'setw monitor-silence %%'
bind -n M-j command-prompt -p 'monitor-content (fnmatch)' "setw monitor-content '%%'"
bind -n M-J setw monitor-content

#-----------------------------------------------------------------------------
# panes
#-----------------------------------------------------------------------------

# create pane
bind -n M-c split-window
bind -n M-r split-window -h

# focus pane or Vim split (if pane running Vim)
# http://robots.thoughtbot.com/post/53022241323
bind -n M-d select-pane -l
bind -n M-h if-shell 'test "#{pane_current_command}" = vim' 'send-keys M-h' 'select-pane -L'
bind -n M-t if-shell 'test "#{pane_current_command}" = vim' 'send-keys M-t' 'select-pane -U'
bind -n M-n if-shell 'test "#{pane_current_command}" = vim' 'send-keys M-n' 'select-pane -D'
bind -n M-s if-shell 'test "#{pane_current_command}" = vim' 'send-keys M-s' 'select-pane -R'
set -g mouse-select-pane on

# resize pane
bind -r H resize-pane -L 5
bind -r T resize-pane -U 5
bind -r N resize-pane -D 5
bind -r S resize-pane -R 5
set -g mouse-resize-pane on

# zoom pane
bind -n M-m resize-pane -Z

# swap pane
bind -n M-- swap-pane -D
bind -n M-_ swap-pane -U
bind -n M-D run-shell 'tmux select-pane -l \; swap-pane -d -s #D'
bind -n M-H run-shell 'tmux select-pane -L \; swap-pane -d -s #D'
bind -n M-T run-shell 'tmux select-pane -U \; swap-pane -d -s #D'
bind -n M-N run-shell 'tmux select-pane -D \; swap-pane -d -s #D'
bind -n M-S run-shell 'tmux select-pane -R \; swap-pane -d -s #D'

# attach by number
bind M-1 join-pane -t :1
bind M-2 join-pane -t :2
bind M-3 join-pane -t :3
bind M-4 join-pane -t :4
bind M-5 join-pane -t :5
bind M-6 join-pane -t :6
bind M-7 join-pane -t :7
bind M-8 join-pane -t :8
bind M-9 join-pane -t :9

# promote pane (toggle)
bind -n M-Enter run 'set -e;         \
  p=$(tmux display-message -p "#P"); \
  if test $p -ne 1; then             \
    tmux select-pane -t 1;           \
  fi;                                \
  tmux select-pane -l;               \
  tmux swap-pane -s 1;               \
'

# rotate panes
bind -n M-a rotate-window -D
bind -n M-A rotate-window -U

#-----------------------------------------------------------------------------
# layouts
#-----------------------------------------------------------------------------

bind -n M-w select-layout main-horizontal
bind -n M-W select-layout even-vertical
bind -n M-v select-layout main-vertical
bind -n M-V select-layout even-horizontal
bind -n M-z select-layout tiled

# main-horizontal layout with the main pane occupying half of the screen
bind -n M-w run '                                                   \
  tmux select-layout main-horizontal >/dev/null;                    \
  i=$(tmux display-message -p "#I");                                \
  w=$(tmux list-windows -F "#""{window_index}:#""{window_height}" | \
      sed -n "s/^$i://p");                                          \
  p=$(tmux list-panes -F "#""{pane_height}" | head -1);             \
  tmux resize-pane -t "$i.1" -D $(expr $(expr $w / 2) - $p);        \
'

# main-vertical layout with the main pane occupying half of the screen
bind -n M-v run '                                                  \
  tmux select-layout main-vertical >/dev/null;                     \
  i=$(tmux display-message -p "#I");                               \
  w=$(tmux list-windows -F "#""{window_index}:#""{window_width}" | \
      sed -n "s/^$i://p");                                         \
  p=$(tmux list-panes -F "#""{pane_width}" | head -1);             \
  tmux resize-pane -t "$i.1" -R $(expr $(expr $w / 2) - $p);       \
'

#-----------------------------------------------------------------------------
# scrollback buffer
#-----------------------------------------------------------------------------

# buffer length
set -g history-limit 32767

# search buffer (using less if Vim is not available)
bind -n M-/ capture-pane -S -32767 \; new-window ' \
  tmux save-buffer - \; delete-buffer | {          \
    vim -R -c "set nofen is hls ic" -;             \
    test $? -eq 127 && less;                       \
  };                                               \
' \; send-keys G ? # go to bottom and search upward

# scroll buffer
# NOTE: set "URxvt.saveLines: 0" in ~/.Xdefaults to make Shift+PageUp bindable
# NOTE: see http://aperiodic.net/screen/interface for doing the same in XTerm
bind -n S-PPage copy-mode -u

# copy from buffer
bind -n M-u copy-mode
setw -g mode-keys vi
bind -t vi-copy v begin-selection
bind -t vi-copy C-V rectangle-toggle
bind -t vi-copy y copy-selection
setw -g mode-mouse on

# transfer copied text to X primary selection
bind -n M-y run 'tmux save-buffer - | xsel -p -i'

# transfer copied text to X clipboard selection
bind -n M-Y run 'tmux save-buffer - | xsel -b -i'

# paste copied text
bind -n M-i paste-buffer

# paste X primary selection
bind -n M-p run 'set -e;           \
  xsel -p -o | tmux load-buffer -; \
  tmux paste-buffer;               \
  tmux delete-buffer;              \
'

# paste X clipboard selection
bind -n M-P run 'set -e;           \
  xsel -b -o | tmux load-buffer -; \
  tmux paste-buffer;               \
  tmux delete-buffer;              \
'
